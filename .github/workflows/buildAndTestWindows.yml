name: Windows build and test

# Run on request and every day at 12 noon UTC
on:
  workflow_dispatch:
  schedule:
    - cron: 0 12 * * *

jobs:
  # Build CIRCT and run its tests.
  build-circt:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Configure Environment
        run: echo "$GITHUB_WORKSPACE/llvm/install/bin" >> $GITHUB_PATH

      # Clone the CIRCT repo and its submodules. Do shallow clone to save clone
      # time.
      - name: Get CIRCT
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
          submodules: "true"

      # --------
      # Restore LLVM from cache and build if it's not in there.
      # --------

      # Extract the LLVM submodule hash for use in the cache key.
      - name: Get LLVM Hash
        id: get-llvm-hash
        run: echo "::set-output name=hash::$(git rev-parse @:./llvm)"
        shell: bash

      # Try to fetch LLVM from the cache.
      - name: Cache LLVM
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: llvm
          key: ${{ runner.os }}-llvm-install-${{ steps.get-llvm-hash.outputs.hash }}

      # Build LLVM if we didn't hit in the cache. Even though we build it in
      # the previous job, there is a low chance that it'll have been evicted by
      # the time we get here.
      - name: Rebuild and Install LLVM
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          mkdir build
          cd build
          cmake ..\llvm -G "Visual Studio 16 2019" `
            -DLLVM_ENABLE_PROJECTS=mlir -DLLVM_BUILD_EXAMPLES=OFF `
            -DLLVM_TARGETS_TO_BUILD="host" -DCMAKE_BUILD_TYPE=Release -Thost=x64 `
            -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_ASSERTIONS=ON `
            -DLLVM_INSTALL_UTILS=ON -DCMAKE_INSTALL_PREFIX="$(pwd)/../install"
          cmake --build . --target install

      # --------
      # Build and test CIRCT in both debug and release mode.
      # --------

      # Build the CIRCT test target in debug mode to build and test.
      - name: Build and test CIRCT (Assert)
        shell: pwsh
        run: |
          mkdir build_assert
          cd build_assert
          cmake ../ `
            -DLLVM_ENABLE_ASSERTIONS=ON `
            -DMLIR_DIR="$(pwd)/../llvm/build/lib/cmake/mlir/" `
            -DLLVM_DIR="$(pwd)/../llvm/build/lib/cmake/llvm/" `
            -DLLVM_EXTERNAL_LIT="$(pwd)/../llvm/build/Debug/bin/llvm-lit.py" `
            -G "Visual Studio 16 2019" `
            -DCMAKE_BUILD_TYPE=Debug -Thost=x64 -DCMAKE_BUILD_TYPE=Debug
          cmake --build .
          cmake --build . --target check-circt


      # Build the CIRCT test target in release mode to build and test.
      - name: Build and Test CIRCT (Release)
        run: |
          mkdir build_release
          cd build_release
          cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DLLVM_ENABLE_ASSERTIONS=OFF \
            -DMLIR_DIR=../llvm/install/lib/cmake/mlir/ \
            -DLLVM_DIR=../llvm/install/lib/cmake/llvm/ \
            -DCMAKE_LINKER=lld \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DLLVM_EXTERNAL_LIT=`pwd`/../llvm/build/bin/llvm-lit
          make check-circt -j$(nproc)

    # --- end of build-circt job.
